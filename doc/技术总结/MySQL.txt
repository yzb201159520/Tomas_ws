MySQL小作文:
开源的，轻量级的关系型数据库
设计三范式, 要有主键，一对多关系的时候要设置外键，多对多关系的时候要设计中间表。

1.MySQL索引的建立(索引的延伸)，innodb事务控制。遇到的问题:乱码。数据库连接池
各类索引的简介与声明方法：

	单列索引(普通索引，唯一索引，主键索引)
		普通索引：AlTER TABLE tableName ADD INDEX indexName (coloumName(length));或者CREATE INDEX indexName ON tableName(coloumName(length));length可以不指定，另外如果字段为char或者varchar，length长度可以小于字段实际长度。
		唯一索引：唯一索引所在的列值是唯一的，但可以为空。【在innodb引擎中，创建唯一约束会创建唯一索引】AlTER TABLE tableName ADD UNIQUE indexName (coloumName(length));
		主键索引：主键索引的值是唯一的且不为空，最好是int和自增的，【在innodb引擎中，将int列设为主键(自增)会自动创建索引】。

	组合索引：语句AlTER TABLE tableName ADD INDEX indexName (coloumName1(length1)，coloumName2(length2)，coloumName3(length3))会创建三个索引 col1,col1与col2,col1与col2与col3.		
		最左前缀原则：在组合索引的where条件中，最左边的col条件应该优先写出，否则不会使用索引，比如 where col2='' and col3=''; 因为创建的三种索引机制中不包含这种索引。而where col1='' and col3='' 则会使用索引。
索引使用的注意事项：
	使用like,><,between,!=等操作会破坏索引，在组合索引中使用这些操作会破坏组合后面的索引。
	
	全文索引：【建立在text字段上】用来检索某字段中匹配固定的字符时需要用到(因为如果使用 like'%%'会破坏该字段索引) 语法：ALTER TABLE tableName ADD FULLTEXT(colName1,colName2); 查询的时候使用：SELECT * FROM tableName WHERE MATCH(colName1,colName2) AGAINST('XXX','sss','ddd');这条命令将把column1和column2字段里有xxx、sss和ddd的数据记录全部查询出来。

索引的优点
	建立索引，在查询中使用索引可以提高性能。提高表的检索效率，减少检索行数。
	在表连接条件列使用可提升连接查询效率
	在分组和排序字段中使用可以提高效率
	唯一索引和主键索引可保证数据的唯一性
索引的缺点
	创建和维护的时间(维护的时间不算明显，建立索引后定位到数据的时间提升明显)
	索引占用物理空间
	在insert,update等的时候需要动态维护占用时间
	组合索引太多会占用很多空间
那些地方应该使用
经常搜索的列，表连接的列，排序分组的列

2.在service层开启的事务使用多线程插入能否回滚?
可以，多线程只是Java中的多线程，对应的MySQL数据库连接就只有那一个，所以是可以回滚的。当然如果在事务中获取了其他的MySQL连接，是不能回滚的。