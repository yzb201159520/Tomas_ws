Spring小作文
Spring的核心特点在于其Bean容器和AOP切面，不管是通过XML配置还是Java配置，在Web程序启动时，Spring都会通过ContextLoaderListener调用AbstactApplicationContext的refresh()方法对会BeanFactory进行初始化然后扫描保留各个beanDifinition(bean定义)，创建单例且非懒加载的bean，在其他scope的bean被需要注入或使用的时候，会提取beanFactory中保存的bean定义，去动态创建bean.
使用AOP好处在于将多个地方都要使用到的与业务逻辑无关的公共部分，使用动态代理的模式，织入到方法的前后通知中，降低了业务代码的耦合性，提高公共代码利用率，而且使用Spring简化后的AOP，可以将AOP切面对象作为Spring容器中的一个bean使用，只需在bean中声明切入点和通知即可。这种机制为日志，事物，拦截器的部署提供了更好的支持。

SpringMVC小作文
一个http请求在SpringMVC中的过程.
1.请求(URL,内容信息)到达 DispatcherServlet
2.DispatcherServlet 从handerMapping那里获取请求映射的控制器和方法信息
3.DispatcherServlet 将请求发送到控制器的方法上，进行逻辑处理
4.控制器中的方法返回ModelAndView到DispatcherServlet
5.DispatcherServlet 调用视图解析器查询视图
6.DispatcherServlet 将视图渲染然后返回回去。

提问总结：
3.Spring的机制，IOC和AOP，事务的声明，乐观锁 ，脏数据。
IOC和AOP见小作文。


4.SpringMVC的一个请求的过程，Filter和InterCepter拦截器的区别。
见SpringMVC小作文

5.Java注解发现Configuration配置的原理/XML配置
答：【Java注解】是Servlet3.0的新特性，只需继承类AbstactAnnotationConfigDispatcherServletInitializer,指定Spring的config和SpringMVC的config,就会对Spring进行初始化。它的原理是在Servlet3.0环境中，在servlet容器加载时，会查找ServletContainerInitializer的实现类，如果找到，则用该类配置servlet容器。Spring提供了该接口的实现SpringServletContainerInitializer,这个类又会去查找WebApplicationInitializer的实现类并将初始化任务交给他们，而Spring3.2引入的AbstactAnnotationConfigDispatcherServletInitializer则提供了该接口的基础实现，因此只需要我们继承该抽象类，在servlet容器加载的时候就会发现我们的继承类，并用它的配置来初始化servlet.
【XML配置】
在DispatcherServlet配置中指定SpringMVC的配置，添加listener监听器，监听程序初始化时的事件并加载SpringContext配置